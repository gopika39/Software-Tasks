import random
def print_board(board):
    for i in range(9):
        if i % 3 == 0 and i != 0:
            print("- - - - - - - - - - -")
        for j in range(9):
            if j % 3 == 0 and j != 0:
                print("|", end=" ")
            print(board[i][j] if board[i][j] != 0 else ".", end=" ")
        print()
def is_valid(board, row, col, num):
    if num in board[row]:
        return False
    if num in [board[i][col] for i in range(9)]:
        return False
    start_row, start_col = 3 * (row // 3), 3 * (col // 3)
    for i in range(start_row, start_row + 3):
        for j in range(start_col, start_col + 3):
            if board[i][j] == num:
                return False
    return True
def solve(board):
    for i in range(9):
        for j in range(9):
            if board[i][j] == 0:
                for num in range(1, 10):
                    if is_valid(board, i, j, num):
                        board[i][j] = num
                        if solve(board):
                            return True
                        board[i][j] = 0
                return False
    return True
def generate_sudoku():
    board = [[0] * 9 for _ in range(9)]
    for _ in range(15):  # Randomly place 15 numbers to start
        row, col = random.randint(0, 8), random.randint(0, 8)
        num = random.randint(1, 9)
        if is_valid(board, row, col, num):
            board[row][col] = num
    return board
def play_sudoku():
    board = generate_sudoku()
    print("Sudoku Puzzle:")
    print_board(board)

    while True:
        row = int(input("Enter row (1-9, 0 to quit): ")) - 1
        if row == -1:
            print("Exiting game.")
            break
        col = int(input("Enter column (1-9): ")) - 1
        num = int(input("Enter number (1-9): "))

        if board[row][col] == 0 and is_valid(board, row, col, num):
            board[row][col] = num
        else:
            print("Invalid move! Try again.")

        print_board(board)
        if all(0 not in row for row in board):
            print("Congratulations! You've solved the Sudoku.")
            break

if __name__ == "__main__":
    play_sudoku()
